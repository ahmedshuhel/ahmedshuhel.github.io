{"version":3,"sources":["webpack:///./src/components/PostFooter/PostFooter.jsx","webpack:///./src/components/AuthorInfo/AuthorInfo.jsx","webpack:///./src/components/PostShare/PostShare.jsx","webpack:///./src/components/GhostSubscribe/GhostSubscribe.jsx","webpack:///./src/components/ReadNext/ReadNext.jsx","webpack:///./src/components/Disqus/Disqus.jsx","webpack:///./src/templates/post.jsx","webpack:///./src/components/Drawer/Drawer.jsx","webpack:///./src/components/SiteWrapper/SiteWrapper.jsx","webpack:///./src/components/Footer/Footer.jsx","webpack:///./src/components/MainHeader/MainHeader.jsx","webpack:///./src/components/MainNav/MainNav.jsx","webpack:///./src/components/BlogLogo/BlogLogo.jsx","webpack:///./src/components/MenuButton/MenuButton.jsx","webpack:///./src/components/Navigation/GetNavList.jsx","webpack:///./src/components/SubscribeButton/SubscribeButton.jsx","webpack:///./src/components/Navigation/Navigation.jsx","webpack:///./src/components/MainContent/MainContent.jsx","webpack:///./src/components/SEO/SEO.jsx","webpack:///./src/components/AuthorImage/AuthorImage.jsx","webpack:///./src/components/AuthorMeta/AuthorMeta.jsx","webpack:///./src/components/AuthorLocation/AuthorLocation.jsx","webpack:///./src/components/AuthorWebsite/AuthorWebsite.jsx"],"names":["PostFooter","render","children","this","props","react_default","a","createElement","className","React","Component","Bio","bio","morePostsUrl","gatsby_browser_entry","to","AuthorInfo","prefix","_this$props$author","author","uid","name","image","url","location","authorInfoUrl","AuthorLink","AuthorInfo_Bio","AuthorMeta","AuthorLocation","AuthorWebsite","PostShare","siteUrl","pathPrefix","_this$props","postNode","postPath","config","post","frontmatter","FacebookShareButton","ShareButtons","GooglePlusShareButton","TwitterShareButton","style","display","title","fontSize","quote","GhostSubscribe","subscribers","blog","href","ReadNextStory","path","cover","excerpt","styles","backgroundImage","classes","classNames","no-cover","ReadNext","next","prev","ReadNext_ReadNextStory","Disqus","_this","_Component","call","state","toasts","notifyAboutComment","bind","assertThisInitialized_default","onSnackbarDismiss","slice","setState","push","text","disqusShortname","fields","slug","main_default","shortname","identifier","category_id","onNewComment","formatReadNext","value","PostTemplate","menuOpen","handleOnClick","evt","stopPropagation","closeMenu","openMenu","handleOnClose","data","_this$props$pageConte","pageContext","markdownRemark","result","id","postDefaultCategoryID","parsePost","date","tags","post_class","authorData","AuthorModel","getAuthor","authors","edges","blogAuthorId","layout","Drawer","isOpen","Helmet_default","siteTitle","SEO","postSEO","Navigation","onClose","SiteWrapper","MainHeader","MainNav","BlogLogo","logo","siteLogo","MenuButton","navigation","siteNavigation","onClick","MainContent","PostFormatting","PostHeader","PostDate","PostTags","dangerouslySetInnerHTML","__html","html","components_PostFooter_PostFooter","AuthorImage","components_AuthorInfo_AuthorInfo","components_PostShare_PostShare","pathname","components_GhostSubscribe_GhostSubscribe","components_Disqus_Disqus","components_ReadNext_ReadNext","Footer","copyright","promoteGatsby","pageQuery","react__WEBPACK_IMPORTED_MODULE_1___default","_this$props$copyright","label","year","Date","getFullYear","show","gatsby__WEBPACK_IMPORTED_MODULE_2__","src","alt","GetNavList","NavList","primaryText","component","Link","divider","userLinks","forEach","link","SubscribeButton","Divider","Subheader","ListItem","remainingProps","objectWithoutPropertiesLoose_default","role","mapToListParts","item","index","key","isValidElement","subheader","nestedItems","Object","assign","map","navItems","components_SubscribeButton_SubscribeButton","siteRss","description","postURL","postMeta","siteDescription","realPrefix","blogURL","schemaOrgJSONLD","@context","@type","alternateName","siteTitleAlt","itemListElement","position","@id","headline","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","content","type","JSON","stringify","property","siteFBAppID","userTwitter","react__WEBPACK_IMPORTED_MODULE_2___default"],"mappings":"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","file":"component---src-templates-post-jsx-516243eb13272dc48de8.js","sourcesContent":["import React from \"react\";\nimport \"./PostFooter.css\";\n\nclass PostFooter extends React.Component {\n  render() {\n    const { children } = this.props;\n    return <footer className=\"post-footer\">{children}</footer>;\n  }\n}\n\nexport default PostFooter;\n","import React from \"react\";\nimport { Link } from \"gatsby\";\nimport \"./AuthorInfo.css\";\nimport AuthorMeta from \"../../components/AuthorMeta/AuthorMeta\";\nimport AuthorLocation from \"../AuthorLocation/AuthorLocation\";\nimport AuthorWebsite from \"../AuthorWebsite/AuthorWebsite\";\nimport AuthorLink from \"../AuthorLink/AuthorLink\";\n\nconst Bio = props => {\n  const { bio, morePostsUrl } = props;\n  if (bio) {\n    return <p>{bio}</p>;\n  }\n  return (\n    <p>\n      Read <Link to={morePostsUrl}>more posts</Link> by this author.\n    </p>\n  );\n};\n\nclass AuthorInfo extends React.Component {\n  render() {\n    const { prefix } = this.props;\n    const { uid, name, image, bio, url, location } = this.props.author;\n    const authorInfoUrl = prefix ? `${prefix}/${uid}` : uid;\n    if (image) {\n      return (\n        <section className=\"author\">\n          <h4>\n            <AuthorLink url={authorInfoUrl} name={name} />\n          </h4>\n          <Bio bio={bio} morePostsUrl={authorInfoUrl} />\n          <AuthorMeta>\n            <AuthorLocation location={location} />\n            <AuthorWebsite url={url} />\n          </AuthorMeta>\n        </section>\n      );\n    }\n    return null;\n  }\n}\n\nexport default AuthorInfo;\n","import React from \"react\";\nimport { ShareButtons } from \"react-share\";\nimport \"./PostShare.css\";\n\nconst formatSiteUrl = (siteUrl, pathPrefix, path) =>\n  siteUrl + (pathPrefix === \"/\" ? \"\" : pathPrefix) + path;\n\n// const getCover = post => {\n//   const { cover } = post;\n//   if (cover && cover.childImageSharp && cover.childImageSharp.original) {\n//     return cover.childImageSharp.original.src;\n//   }\n//   return \"\";\n// };\n\nclass PostShare extends React.Component {\n  render() {\n    const { postNode, postPath, config } = this.props;\n    const post = postNode.frontmatter;\n    const url = formatSiteUrl(config.siteUrl, config.pathPrefix, postPath);\n\n    const {\n      FacebookShareButton,\n      GooglePlusShareButton,\n      // PinterestShareButton,\n      TwitterShareButton\n    } = ShareButtons;\n\n    return (\n      <section className=\"share\">\n        <h4>Share this post</h4>\n        <div style={{ display: \"flex\" }}>\n          <TwitterShareButton url={url} title={post.title}>\n            <a className=\"icon-twitter\" style={{ fontSize: \"1.4em\" }}>\n              <span className=\"hidden\">Twitter</span>\n            </a>\n          </TwitterShareButton>\n          <FacebookShareButton url={url} quote={post.title}>\n            <a className=\"icon-facebook\" style={{ fontSize: \"1.4em\" }}>\n              <span className=\"hidden\">Facebook</span>\n            </a>\n          </FacebookShareButton>\n          {/* <PinterestShareButton */}\n          {/* url={url} */}\n          {/* media={formatSiteUrl( */}\n          {/* config.siteUrl, */}\n          {/* config.pathPrefix, */}\n          {/* getCover(post) */}\n          {/* )} */}\n          {/* description={postNode.excerpt} */}\n          {/* > */}\n          {/* <a className=\"icon-pinterest\" style={{ fontSize: \"1.4em\" }}> */}\n          {/* <span className=\"hidden\">Pinterest</span> */}\n          {/* </a> */}\n          {/* </PinterestShareButton> */}\n          <GooglePlusShareButton url={url}>\n            <a className=\"icon-google-plus\" style={{ fontSize: \"1.4em\" }}>\n              <span className=\"hidden\">Google+</span>\n            </a>\n          </GooglePlusShareButton>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default PostShare;\n","import React from \"react\";\nimport \"./GhostSubscribe.css\";\n\nclass GhostSubscribe extends React.Component {\n  render() {\n    const { subscribers, blog } = this.props;\n    // const subscribeFormPlaceholder = \"Your email address\";\n    if (subscribers && blog) {\n      // Email subscribe form at the bottom of the page\n      return (\n        <section className=\"gh-subscribe\">\n          <h3 className=\"gh-subscribe-title\">Subscribe to {blog.title}</h3>\n          <p>Get the latest posts delivered right to your inbox.</p>\n          <span className=\"gh-subscribe-rss\">\n            or subscribe{\" \"}\n            <a href=\"http://cloud.feedly.com/#subscription/feed/{blog.url}/rss/\">\n              via RSS\n            </a>{\" \"}\n            with Feedly!\n          </span>\n        </section>\n      );\n    }\n    return null;\n  }\n}\n\nexport default GhostSubscribe;\n","import React, { Component } from \"react\";\nimport classNames from \"classnames\";\nimport { Link } from \"gatsby\";\nimport \"./ReadNext.css\";\n\nconst ReadNextStory = props => {\n  const { post } = props;\n  if (post) {\n    /** Limit words to 19 in GraphQL * */\n    const { path, cover, title, excerpt } = post;\n    const styles = cover ? { backgroundImage: `url(${cover}` } : null;\n    const classes = classNames(\"read-next-story\", props.className, {\n      \"no-cover\": !cover\n    });\n    return (\n      <Link className={classes} style={styles} to={path}>\n        <section className=\"post\">\n          <h2>{title}</h2>\n          <p>{excerpt}&hellip;</p>\n        </section>\n      </Link>\n    );\n  }\n  return null;\n};\n\n/**\n * Links to Previous/Next posts\n */\nclass ReadNext extends Component {\n  render() {\n    const { next, prev } = this.props;\n    return (\n      <aside className=\"read-next\">\n        <ReadNextStory post={next} />\n        <ReadNextStory className=\"prev\" post={prev} />\n      </aside>\n    );\n  }\n}\n\nexport default ReadNext;\n","import React, { Component } from \"react\";\nimport ReactDisqusComments from \"react-disqus-comments\";\nimport config from \"../../../data/SiteConfig\";\n\nclass Disqus extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      toasts: []\n    };\n    this.notifyAboutComment = this.notifyAboutComment.bind(this);\n    this.onSnackbarDismiss = this.onSnackbarDismiss.bind(this);\n  }\n\n  onSnackbarDismiss() {\n    const [, ...toasts] = this.state.toasts;\n    this.setState({ toasts });\n  }\n  notifyAboutComment() {\n    const toasts = this.state.toasts.slice();\n    toasts.push({ text: \"New comment available!\" });\n    this.setState({ toasts });\n  }\n  render() {\n    const { postNode } = this.props;\n    if (!config.disqusShortname) {\n      return null;\n    }\n    const post = postNode.frontmatter;\n    const url = config.siteUrl + config.pathPrefix + postNode.fields.slug;\n    return (\n      <ReactDisqusComments\n        shortname={config.disqusShortname}\n        identifier={post.title}\n        title={post.title}\n        url={url}\n        category_id={post.category_id}\n        onNewComment={this.notifyAboutComment}\n      />\n    );\n  }\n}\n\nexport default Disqus;\n","import { graphql } from \"gatsby\";\nimport React from \"react\";\nimport Helmet from \"react-helmet\";\nimport SEO from \"../components/SEO/SEO\";\nimport config from \"../../data/SiteConfig\";\nimport MainHeader from \"../components/MainHeader/MainHeader\";\nimport MainNav from \"../components/MainNav/MainNav\";\nimport BlogLogo from \"../components/BlogLogo/BlogLogo\";\nimport MenuButton from \"../components/MenuButton/MenuButton\";\nimport Drawer from \"../components/Drawer/Drawer\";\nimport Navigation from \"../components/Navigation/Navigation\";\nimport SiteWrapper from \"../components/SiteWrapper/SiteWrapper\";\nimport MainContent from \"../components/MainContent/MainContent\";\nimport PostHeader from \"../components/PostHeader/PostHeader\";\nimport PostFormatting from \"../components/PostFormatting/PostFormatting\";\nimport PostDate from \"../components/PostDate/PostDate\";\nimport PostFooter from \"../components/PostFooter/PostFooter\";\nimport AuthorImage from \"../components/AuthorImage/AuthorImage\";\nimport AuthorInfo from \"../components/AuthorInfo/AuthorInfo\";\nimport PostShare from \"../components/PostShare/PostShare\";\nimport GhostSubscribe from \"../components/GhostSubscribe/GhostSubscribe\";\nimport ReadNext from \"../components/ReadNext/ReadNext\";\nimport PostTags from \"../components/PostTags/PostTags\";\nimport Footer from \"../components/Footer/Footer\";\nimport AuthorModel from \"../models/author-model\";\nimport Disqus from \"../components/Disqus/Disqus\";\nimport Layout from \"../components/layout\";\n\nfunction parsePost(post, slug) {\n  const result = post;\n  if (!result.id) {\n    result.id = slug;\n  }\n  if (!result.id) {\n    result.category_id = config.postDefaultCategoryID;\n  }\n  return result;\n}\n\nconst formatReadNext = value => ({\n  path: value.fields.slug,\n  title: value.frontmatter.title,\n  cover: value.frontmatter.cover,\n  excerpt: value.excerpt\n});\n\nclass PostTemplate extends React.Component {\n  state = {\n    menuOpen: false\n  };\n\n  handleOnClick = evt => {\n    evt.stopPropagation();\n    if (this.state.menuOpen) {\n      this.closeMenu();\n    } else {\n      this.openMenu();\n    }\n  };\n\n  handleOnClose = evt => {\n    evt.stopPropagation();\n    this.closeMenu();\n  };\n\n  openMenu = () => {\n    this.setState({ menuOpen: true });\n  };\n\n  closeMenu = () => {\n    this.setState({ menuOpen: false });\n  };\n\n  render() {\n    const { location, data } = this.props;\n    const { slug, next, prev } = this.props.pageContext;\n    const postNode = this.props.data.markdownRemark;\n    const post = parsePost(postNode.frontmatter, slug);\n    const { cover, title, date, author, tags } = post;\n    const className = post.post_class ? post.post_class : \"post\";\n    const authorData = AuthorModel.getAuthor(\n      this.props.data.authors.edges,\n      author,\n      config.blogAuthorId\n    );\n    const getNextData = () => (next ? formatReadNext(data.next) : null);\n    const getPrevData = () => (prev ? formatReadNext(data.prev) : null);\n\n    return (\n      <Layout location={this.props.location}>\n        <Drawer className=\"post-template\" isOpen={this.state.menuOpen}>\n          <Helmet>\n            <title>{`${post.title} | ${config.siteTitle}`}</title>\n          </Helmet>\n          <SEO postPath={slug} postNode={postNode} postSEO />\n\n          {/* The blog navigation links */}\n          <Navigation config={config} onClose={this.handleOnClose} />\n\n          <SiteWrapper>\n            <MainHeader className=\"post-head\" cover={cover}>\n              <MainNav>\n                <BlogLogo logo={config.siteLogo} title={config.siteTitle} />\n                <MenuButton\n                  navigation={config.siteNavigation}\n                  onClick={this.handleOnClick}\n                />\n              </MainNav>\n            </MainHeader>\n            <MainContent>\n              <PostFormatting className={className}>\n                <PostHeader>\n                  <h1 className=\"post-title\">{title}</h1>\n                  <section className=\"post-meta\">\n                    <PostDate date={date} />\n                    <PostTags prefix=\" on \" tags={tags} />\n                  </section>\n                </PostHeader>\n\n                <section\n                  className=\"post-content\"\n                  dangerouslySetInnerHTML={{ __html: postNode.html }}\n                />\n\n                <PostFooter>\n                  <AuthorImage author={authorData} />\n                  <AuthorInfo prefix=\"/author\" author={authorData} />\n                  <PostShare\n                    postNode={postNode}\n                    postPath={location.pathname}\n                    config={config}\n                  />\n                  <GhostSubscribe />\n                  <Disqus postNode={postNode} />\n                </PostFooter>\n              </PostFormatting>\n            </MainContent>\n            <ReadNext next={getNextData()} prev={getPrevData()} />\n\n            {/* The tiny footer at the very bottom */}\n            <Footer\n              copyright={config.copyright}\n              promoteGatsby={config.promoteGatsby}\n            />\n          </SiteWrapper>\n        </Drawer>\n      </Layout>\n    );\n  }\n}\n\n/* eslint no-undef: \"off\" */\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!, $next: String, $prev: String) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      timeToRead\n      excerpt\n      frontmatter {\n        title\n        cover\n        date\n        category\n        tags\n        author\n      }\n      fields {\n        slug\n      }\n    }\n    # prev post data\n    prev: markdownRemark(fields: { slug: { eq: $prev } }) {\n      excerpt(pruneLength: 112)\n      frontmatter {\n        title\n        cover\n        date\n      }\n      fields {\n        slug\n      }\n    }\n    # next post data\n    next: markdownRemark(fields: { slug: { eq: $next } }) {\n      excerpt(pruneLength: 112)\n      frontmatter {\n        title\n        cover\n        date\n      }\n      fields {\n        slug\n      }\n    }\n    # authors\n    authors: allAuthorsJson {\n      edges {\n        node {\n          uid\n          name\n          image\n          url\n          bio\n        }\n      }\n    }\n  }\n`;\n\nexport default PostTemplate;\n","import React from \"react\";\nimport classNames from \"classnames\";\nimport \"./Drawer.css\";\n\nclass Drawer extends React.Component {\n  render() {\n    const { children, isOpen, className } = this.props;\n\n    const getClassName = isOpened => (isOpened ? \"nav-opened\" : \"nav-closed\");\n    const classes = classNames(className, getClassName(isOpen));\n\n    return <div className={classes}>{children}</div>;\n  }\n}\n\nexport default Drawer;\n","import React from \"react\";\nimport \"./SiteWrapper.css\";\n\nclass SiteWrapper extends React.Component {\n  render() {\n    const { children } = this.props;\n    return <div className=\"site-wrapper\">{children}</div>;\n  }\n}\n\nexport default SiteWrapper;\n","import React, { Component } from \"react\";\nimport \"./Footer.css\";\n\nclass Footer extends Component {\n  render() {\n    const PoweredBy = props => {\n      const { show } = props;\n      if (show) {\n        return (\n          <section className=\"poweredby\">\n            Proudly published with <a href=\"https://gatsbyjs.org\">Gatsby</a>\n          </section>\n        );\n      }\n      return null;\n    };\n\n    const { promoteGatsby } = this.props;\n    const { label, url, year } = this.props.copyright;\n    return (\n      <footer className=\"site-footer clearfix\">\n        <section className=\"copyright\">\n          <a href={url || \"/\"}>{label}</a> &copy;{\" \"}\n          {year || new Date().getFullYear()}\n        </section>\n        <PoweredBy show={promoteGatsby} />\n      </footer>\n    );\n  }\n}\n\nexport default Footer;\n","import React from \"react\";\nimport classNames from \"classnames\";\nimport \"./MainHeader.css\";\n\nclass MainHeader extends React.Component {\n  render() {\n    const { children, cover } = this.props;\n\n    const classes = classNames(\"main-header\", this.props.className, {\n      \"no-cover\": !cover\n    });\n\n    const getStyle = () => {\n      if (cover) {\n        return { backgroundImage: `url(\"${cover}\")` };\n      }\n      return null;\n    };\n\n    return (\n      <header className={classes} style={getStyle()}>\n        {children}\n      </header>\n    );\n  }\n}\n\nexport default MainHeader;\n","import React from \"react\";\nimport classNames from \"classnames\";\nimport \"./MainNav.css\";\n\nclass MainNav extends React.Component {\n  render() {\n    const { children, className } = this.props;\n    const formatting = [\"overlay\", \"clearfix\"];\n    const classes = classNames(\"main-nav\", formatting, className);\n\n    return <nav className={classes}>{children}</nav>;\n  }\n}\n\nexport default MainNav;\n","import React, { Component } from \"react\";\nimport { Link } from \"gatsby\";\nimport \"./BlogLogo.css\";\n\nclass BlogLogo extends Component {\n  render() {\n    const { logo, url, title } = this.props;\n    if (logo) {\n      return (\n        <Link className=\"blog-logo\" to={url || \"/\"}>\n          {/* style={{ boxShadow: \"none\" }}> */}\n          <img src={logo} alt={title} />\n        </Link>\n      );\n    }\n    return null;\n  }\n}\n\nexport default BlogLogo;\n","import React, { Component } from \"react\";\nimport \"./MenuButton.css\";\n\nclass MenuButton extends Component {\n  render() {\n    const { navigation, onClick } = this.props;\n    if (navigation && onClick) {\n      return (\n        <a className=\"menu-button icon-menu\" href=\"#menu\" onClick={onClick}>\n          <span className=\"word\">Menu</span>\n        </a>\n      );\n    }\n    return null;\n  }\n}\n\nexport default MenuButton;\n","// import FontIcon from \"react-md/lib/FontIcons\";\nimport { Link } from \"gatsby\";\n\nfunction GetNavList(config) {\n  const NavList = [\n    {\n      primaryText: \"Home\",\n      // LeftIcon: <p>home</p>,\n      component: Link,\n      to: \"/\"\n    },\n    {\n      divider: true\n    }\n  ];\n\n  if (config.userLinks) {\n    config.userLinks.forEach(link => {\n      NavList.push({\n        primaryText: link.label,\n        // LeftIcon: <FontIcon forceSize iconClassName={link.iconClassName} />,\n        component: \"a\",\n        href: link.url\n      });\n    });\n  }\n\n  NavList.push({ divider: true });\n\n  NavList.push({\n    primaryText: \"About\",\n    // LeftIcon: <FontIcon>person</FontIcon>,\n    component: Link,\n    to: \"/about/\"\n  });\n  return NavList;\n}\nexport default GetNavList;\n","import React from \"react\";\nimport \"./SubscribeButton.css\";\n\nclass SubscribeButton extends React.Component {\n  render() {\n    const { url } = this.props;\n    if (url) {\n      return (\n        <a className=\"subscribe-button icon-feed\" href={url}>\n          Subscribe\n        </a>\n      );\n    }\n    return null;\n  }\n}\n\nexport default SubscribeButton;\n","import React, { Component, createElement, isValidElement } from \"react\";\nimport GetNavList from \"./GetNavList\";\nimport \"./Navigation.css\";\nimport SubscribeButton from \"../SubscribeButton/SubscribeButton\";\n\nconst Divider = () => null;\n\nconst Subheader = props => {\n  const { primaryText } = props;\n  return <h3>{primaryText}</h3>;\n};\n\nconst ListItem = props => {\n  const { primaryText, component, ...remainingProps } = props;\n  return (\n    <li className=\"nav-opened\" role=\"presentation\">\n      {createElement(component, remainingProps, primaryText)}\n    </li>\n  );\n};\n\nconst mapToListParts = (item, index) => {\n  if (typeof item === \"string\" || typeof item === \"number\") {\n    return createElement(ListItem, { key: item, primaryText: item });\n  } else if (isValidElement(item)) {\n    return item;\n  }\n\n  const { divider, subheader, nestedItems, ...remainingProps } = item;\n  let component;\n  if (divider) {\n    component = Divider;\n  } else if (subheader) {\n    component = Subheader;\n  } else {\n    component = ListItem;\n  }\n\n  const props = { ...remainingProps, key: item.key || index };\n  if (nestedItems) {\n    props.nestedItems = nestedItems.map(mapToListParts);\n  }\n\n  return createElement(component, props);\n};\n\nclass Navigation extends Component {\n  render() {\n    const { config, onClose } = this.props;\n    const navItems = GetNavList(config);\n    return (\n      <div>\n        <div className=\"nav\">\n          <h3 className=\"nav-title\">Menu</h3>\n          <a href=\"#close\" className=\"nav-close\" onClick={onClose}>\n            <span className=\"hidden\">Close</span>\n          </a>\n          <ul>{navItems.map(mapToListParts)}</ul>\n          <SubscribeButton url={config.siteRss} />\n        </div>\n        <span className=\"nav-cover\" />\n      </div>\n    );\n  }\n}\n\nexport default Navigation;\n","import React from \"react\";\nimport classNames from \"classnames\";\nimport \"./MainContent.css\";\n\nclass MainContent extends React.Component {\n  render() {\n    const { children } = this.props;\n\n    const classes = classNames(\"content\", this.props.className);\n\n    return (\n      <main id=\"content\" className={classes} role=\"main\">\n        {children}\n      </main>\n    );\n  }\n}\n\nexport default MainContent;\n","import React, { Component } from \"react\";\nimport Helmet from \"react-helmet\";\nimport config from \"../../../data/SiteConfig\";\n\nclass SEO extends Component {\n  render() {\n    const { postNode, postPath, postSEO } = this.props;\n    let title;\n    let description;\n    let image;\n    let postURL;\n    if (postSEO) {\n      const postMeta = postNode.frontmatter;\n      title = postMeta.title;\n      description = postMeta.description\n        ? postMeta.description\n        : postNode.excerpt;\n      image = postMeta.cover;\n      postURL = config.siteUrl + config.pathPrefix + postPath;\n    } else {\n      title = config.siteTitle;\n      description = config.siteDescription;\n      image = config.siteLogo;\n    }\n    const realPrefix = config.pathPrefix === \"/\" ? \"\" : config.pathPrefix;\n    image = config.siteUrl + realPrefix + image;\n    const blogURL = config.siteUrl + config.pathPrefix;\n    const schemaOrgJSONLD = [\n      {\n        \"@context\": \"http://schema.org\",\n        \"@type\": \"WebSite\",\n        url: blogURL,\n        name: title,\n        alternateName: config.siteTitleAlt ? config.siteTitleAlt : \"\"\n      }\n    ];\n    if (postSEO) {\n      schemaOrgJSONLD.push([\n        {\n          \"@context\": \"http://schema.org\",\n          \"@type\": \"BreadcrumbList\",\n          itemListElement: [\n            {\n              \"@type\": \"ListItem\",\n              position: 1,\n              item: {\n                \"@id\": postURL,\n                name: title,\n                image\n              }\n            }\n          ]\n        },\n        {\n          \"@context\": \"http://schema.org\",\n          \"@type\": \"BlogPosting\",\n          url: blogURL,\n          name: title,\n          alternateName: config.siteTitleAlt ? config.siteTitleAlt : \"\",\n          headline: title,\n          image: {\n            \"@type\": \"ImageObject\",\n            url: image\n          },\n          description\n        }\n      ]);\n    }\n    return (\n      <Helmet>\n        {/* General tags */}\n        <meta name=\"description\" content={description} />\n        <meta name=\"image\" content={image} />\n\n        {/* Schema.org tags */}\n        <script type=\"application/ld+json\">\n          {JSON.stringify(schemaOrgJSONLD)}\n        </script>\n\n        {/* OpenGraph tags */}\n        <meta property=\"og:url\" content={postSEO ? postURL : blogURL} />\n        {postSEO ? <meta property=\"og:type\" content=\"article\" /> : null}\n        <meta property=\"og:title\" content={title} />\n        <meta property=\"og:description\" content={description} />\n        <meta property=\"og:image\" content={image} />\n        <meta\n          property=\"fb:app_id\"\n          content={config.siteFBAppID ? config.siteFBAppID : \"\"}\n        />\n\n        {/* Twitter Card tags */}\n        <meta name=\"twitter:card\" content=\"summary_large_image\" />\n        <meta\n          name=\"twitter:creator\"\n          content={config.userTwitter ? config.userTwitter : \"\"}\n        />\n        <meta name=\"twitter:title\" content={title} />\n        <meta name=\"twitter:description\" content={description} />\n        <meta name=\"twitter:image\" content={image} />\n      </Helmet>\n    );\n  }\n}\n\nexport default SEO;\n","import React from \"react\";\nimport \"./AuthorImage.css\";\n\nclass AuthorImage extends React.Component {\n  render() {\n    const { name, image, url } = this.props.author;\n    if (image) {\n      return (\n        <figure className=\"author-image\">\n          <a\n            className=\"img\"\n            href={url}\n            style={{ backgroundImage: `url(\"${image}\")` }}\n          >\n            <span className=\"hidden\">{`${name}'s Picture`}</span>\n          </a>\n        </figure>\n      );\n    }\n    return null;\n  }\n}\n\nexport default AuthorImage;\n","import React from \"react\";\nimport classNames from \"classnames\";\nimport \"./AuthorMeta.css\";\n\nclass AuthorMeta extends React.Component {\n  render() {\n    const { children, className } = this.props;\n    const classes = classNames(\"author-meta\", className);\n\n    return <div className={classes}>{children}</div>;\n  }\n}\n\nexport default AuthorMeta;\n","import React from \"react\";\n\nclass AuthorLocation extends React.Component {\n  render() {\n    const { location } = this.props;\n    if (location) {\n      return <span className=\"author-location icon-location\">{location}</span>;\n    }\n    return null;\n  }\n}\n\nexport default AuthorLocation;\n","import React from \"react\";\n\nclass AuthorWebsite extends React.Component {\n  render() {\n    const { url } = this.props;\n    if (url) {\n      return (\n        <span className=\"author-link icon-link\">\n          <a href={url}>{url}</a>\n        </span>\n      );\n    }\n    return null;\n  }\n}\n\nexport default AuthorWebsite;\n"],"sourceRoot":""}