{"version":3,"sources":["webpack:///./data/SiteConfig.js","webpack:///./src/components/PostTags/PostTags.jsx","webpack:///./src/components/AuthorLink/AuthorLink.jsx","webpack:///./src/components/PostFormatting/PostFormatting.jsx","webpack:///./src/components/PostHeader/PostHeader.jsx","webpack:///./src/components/PostDate/PostDate.jsx","webpack:///./src/models/author-model.js","webpack:///./src/components/layout.jsx"],"names":["module","exports","blogPostDir","blogAuthorDir","blogAuthorId","siteTitle","siteTitleAlt","siteLogo","siteUrl","pathPrefix","siteDescription","siteCover","siteNavigation","siteRss","siteRssAuthor","sitePaginationLimit","googleAnalyticsID","siteSocialUrls","postDefaultCategoryID","userLinks","label","url","iconClassName","copyright","year","themeColor","backgroundColor","promoteGatsby","PostTags","render","_this$props","this","props","prefix","tags","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","map","tag","index","arr","key","gatsby__WEBPACK_IMPORTED_MODULE_3__","to","_","kebabCase","length","Component","AuthorLink","name","react__WEBPACK_IMPORTED_MODULE_2___default","React","PostFormatting","children","className","PostHeader","PostDate","date","dateTime","moment","Date","format","findName","author","uid","authorEdgesToList","authorEdges","edge","node","AuthorModel","hasAuthor","authorUid","authorList","Boolean","find","getAuthor","fallbackId","MainLayout","getLocalTitle","capitalize","string","charAt","toUpperCase","slice","config","currentPath","location","pathname","replace","title","includes","react__WEBPACK_IMPORTED_MODULE_4___default","react_helmet__WEBPACK_IMPORTED_MODULE_5___default","content"],"mappings":"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","file":"2-c73ca9bf37843e5eda59.js","sourcesContent":["module.exports = {\n  blogPostDir: \"posts\", // The name of directory that contains your posts.\n  blogAuthorDir: \"authors\", // The name of directory that contains your 'authors' folder.\n  blogAuthorId: \"ahmedshuhel\", // The default and fallback author ID used for blog posts without a defined author.\n  siteTitle: \"Random Thoughts\", // Site title.\n  siteTitleAlt: \"Random Thoughts of Shuhel Ahmed\", // Alternative site title for SEO.\n  siteLogo:\n    \"https://haysclark.github.io/gatsby-starter-casper/logos/logo-1024.png\", // Logo used for SEO and manifest. e.g. \"/logos/logo-1024.png\",\n  siteUrl: \"https://blog.ahmedshuhel.com\", // Domain of your website without pathPrefix.\n  pathPrefix: \"/\", // Prefixes all links. For cases when deployed to example.github.io/gatsby-starter-casper/.\n  siteDescription:\n    \"Random thougths on Programming, Software Engineering and Life\", // Website description used for RSS feeds/meta description tag.\n  siteCover:\n    \"https://haysclark.github.io/gatsby-starter-casper/images/blog-cover.jpg\", // Optional, the cover image used in header for home page. e.g: \"/images/blog-cover.jpg\",\n  siteNavigation: true, // If navigation is enabled the Menu button will be visible\n  siteRss: \"/rss.xml\", // Path to the RSS file.\n  siteRssAuthor: \"Shuhel Ahmed\", // The author name used in the RSS file\n  // siteFBAppID: \"1825356251115265\", // optional, sets the FB Application ID for using app insights\n  sitePaginationLimit: 10, // The max number of posts per page.\n  googleAnalyticsID: \"UA-111982167-1\", // GA tracking ID.\n  // disqusShortname: \"https-vagr9k-github-io-gatsby-advanced-starter\", // enables Disqus comments, visually deviates from original Casper theme.\n  siteSocialUrls: [\n    \"https://github.com/ahmedshuhel\",\n    \"https://twitter.com/ahmedshuhel\",\n    \"mailto:shuhel@ymail.com\"\n  ],\n  postDefaultCategoryID: \"Tech\", // Default category for posts.\n  // Links to social profiles/projects you want to display in the navigation bar.\n  userLinks: [\n    {\n      label: \"GitHub\",\n      url: \"https://github.com/ahmedshuhel\",\n      iconClassName: \"fa fa-github\" // Disabled, see Navigation.jsx\n    },\n    {\n      label: \"Twitter\",\n      url: \"https://twitter.com/ahmedshuhel\",\n      iconClassName: \"fa fa-twitter\" // Disabled, see Navigation.jsx\n    },\n    {\n      label: \"Email\",\n      url: \"mailto:shuhel@ymail.com\",\n      iconClassName: \"fa fa-envelope\" // Disabled, see Navigation.jsx\n    }\n  ],\n  // Copyright string for the footer of the website and RSS feed.\n  copyright: {\n    label: \"Shuhel Ahmed\", // Label used before the year\n    year: \"2019\", // optional, set specific copyright year or range of years, defaults to current year\n    url: \"https://blog.ahmedshuhel.com/\" // optional, set link address of copyright, defaults to site root\n  },\n  themeColor: \"#c62828\", // Used for setting manifest and progress theme colors.\n  backgroundColor: \"#e0e0e0\", // Used for setting manifest background color.\n  promoteGatsby: false // Enables the GatsbyJS promotion information in footer.\n};\n","import React, { Component } from \"react\";\nimport _ from \"lodash\";\nimport { Link } from \"gatsby\";\nimport \"./PostTags.css\";\n\nclass PostTags extends Component {\n  render() {\n    const { prefix, tags } = this.props;\n    if (tags) {\n      return (\n        <span>\n          {prefix}\n          {tags.map((tag, index, arr) => (\n            <span key={tag}>\n              <Link key={tag} to={`/tags/${_.kebabCase(tag)}`}>\n                {tag}\n              </Link>\n              {index !== arr.length - 1 ? \", \" : \"\"}\n            </span>\n          ))}\n        </span>\n      );\n    }\n    return null;\n  }\n}\n\nexport default PostTags;\n","import React from \"react\";\nimport { Link } from \"gatsby\";\nimport \"./AuthorLink.css\";\n\nclass AuthorLink extends React.Component {\n  render() {\n    const { name, url } = this.props;\n    if (name && url) {\n      return <Link to={url}>{name}</Link>;\n    }\n    return null;\n  }\n}\n\nexport default AuthorLink;\n","import React from \"react\";\nimport \"./PostFormatting.css\";\n\nclass PostFormatting extends React.Component {\n  render() {\n    const { children, className } = this.props;\n    return <article className={className}>{children}</article>;\n  }\n}\n\nexport default PostFormatting;\n","import React from \"react\";\nimport \"./PostHeader.css\";\n\nclass PostHeader extends React.Component {\n  render() {\n    const { children } = this.props;\n    return <header className=\"post-header\">{children}</header>;\n  }\n}\n\nexport default PostHeader;\n","import React from \"react\";\nimport moment from \"moment\";\nimport \"./PostDate.css\";\n\nclass PostDate extends React.Component {\n  render() {\n    const { date } = this.props;\n    return (\n      <time\n        className=\"post-date\"\n        dateTime={moment(new Date(date)).format(\"YYYY-MM-DD\")}\n      >\n        {moment(new Date(date)).format(\"DD MMMM YYYY\")}\n      </time>\n    );\n  }\n}\n\nexport default PostDate;\n","const findName = name => author => author.uid === name;\nconst authorEdgesToList = authorEdges => authorEdges.map(edge => edge.node);\n\nclass AuthorModel {\n  static hasAuthor(authorEdges, authorUid) {\n    const authorList = authorEdgesToList(authorEdges);\n    return Boolean(authorList.find(findName(authorUid)));\n  }\n\n  static getAuthor(authorEdges, authorUid, fallbackId) {\n    const authorList = authorEdgesToList(authorEdges);\n    if (this.hasAuthor(authorEdges, authorUid)) {\n      return authorList.find(findName(authorUid));\n    }\n    return authorList.find(findName(fallbackId));\n  }\n}\n\nexport default AuthorModel;\n","import React from \"react\";\nimport Helmet from \"react-helmet\";\nimport config from \"../../data/SiteConfig\";\nimport \"./layout.css\";\n\nexport default class MainLayout extends React.Component {\n  getLocalTitle() {\n    function capitalize(string) {\n      return string.charAt(0).toUpperCase() + string.slice(1);\n    }\n    const pathPrefix = config.pathPrefix ? config.pathPrefix : \"/\";\n    const currentPath = this.props.location.pathname\n      .replace(pathPrefix, \"\")\n      .replace(\"/\", \"\");\n    let title = \"\";\n    if (currentPath === \"\") {\n      title = \"Home\";\n    } else if (currentPath === \"tags/\") {\n      title = \"Tags\";\n    } else if (currentPath === \"categories/\") {\n      title = \"Categories\";\n    } else if (currentPath === \"about/\") {\n      title = \"About\";\n    } else if (currentPath.includes(\"posts\")) {\n      title = \"Article\";\n    } else if (currentPath.includes(\"tags/\")) {\n      const tag = currentPath\n        .replace(\"tags/\", \"\")\n        .replace(\"/\", \"\")\n        .replace(\"-\", \" \");\n      title = `Tagged in ${capitalize(tag)}`;\n    } else if (currentPath.includes(\"categories/\")) {\n      const category = currentPath\n        .replace(\"categories/\", \"\")\n        .replace(\"/\", \"\")\n        .replace(\"-\", \" \");\n      title = `${capitalize(category)}`;\n    }\n    return title;\n  }\n  render() {\n    const { children } = this.props;\n    return (\n      <div>\n        <Helmet>\n          <title>{`${config.siteTitle} |  ${this.getLocalTitle()}`}</title>\n          <meta name=\"description\" content={config.siteDescription} />\n        </Helmet>\n        {children}\n      </div>\n    );\n  }\n}\n"],"sourceRoot":""}